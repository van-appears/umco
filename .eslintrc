{
  "env": {
    "browser": true, // browser global variables
  },

  "rules": {
    "default-case": 0, // require default case in switch statements
    "func-names": 0, // require function expressions to have a name
    "no-alert": 0, // disallow the use of alert, confirm, and prompt
    "no-console": 0, // allow use of console
    "quote-props": 0, // require quotes around object literal property names (off by default)

    "brace-style": [ 2, "1tbs", { "allowSingleLine": true } ], // enforce one true brace style
    "computed-property-spacing": [ 2, "always" ], // require or disallow padding inside computed properties
    "consistent-return": 2, // require return statements to either always or never specify values
    "curly": 2, // specify curly brace conventions for all control statements
    "dot-location": [ 2, "property" ], // enforces consistent newlines before or after dots
    "dot-notation": 2, // encourages use of dot notation whenever possible
    "eol-last": 2, // enforce newline at the end of file, with no multiple empty lines
    "eqeqeq": 2, // require the use of === and !==
    "func-style": [ 2, "declaration" ], // enforces use of function declarations or expressions
    "indent": [ 2, 4, { "SwitchCase": 1 } ], // this option sets a specific tab width for your code
    "keyword-spacing": 2,
    "max-len": 2, // specify the maximum length of a line in your program
    "no-irregular-whitespace": 2, // disallow irregular whitespace outside of strings and comments
    "no-mixed-spaces-and-tabs": 2, // disallow mixed spaces and tabs for indentation
    "no-multi-spaces": 2, // disallow use of multiple spaces
    "no-multiple-empty-lines": 2, // disallow multiple empty lines
    "no-trailing-spaces": 2, // disallow trailing whitespace at the end of lines
    "no-unused-expressions": 2, // disallow usage of expressions in statement position
    "padded-blocks": [ 2, "never" ], // enforce padding within blocks
    "quotes": [ 2, "double" ], // specify whether double or single quotes should be used
    "space-before-function-paren": [ 2, "never" ], // require or disallow space before function opening parenthesis
    "space-in-parens": [ 2, "always" ], // require or disallow spaces inside parentheses
    "yoda": 2,                  // require or disallow Yoda conditions

    "comma-dangle": 2,             // disallow trailing commas in object literals
    "no-cond-assign": 2,           // disallow assignment in conditional expressions
    "no-constant-condition": 2,    // disallow use of constant expressions in conditions
    "no-control-regex": 2,         // disallow control characters in regular expressions
    "no-debugger": 2,              // disallow use of debugger
    "no-dupe-args": 2,             // disallow duplicate arguments in functions
    "no-dupe-keys": 2,             // disallow duplicate keys when creating object literals
    "no-duplicate-case": 2,        // disallow a duplicate case label
    "no-empty-character-class": 2, // disallow the use of empty character classes in regular expressions
    "no-empty": 2,                 // disallow empty statements
    "no-ex-assign": 2,             // disallow assigning to the exception in a catch block
    "no-extra-boolean-cast": 2,    // disallow double-negation boolean casts in a boolean context
    "no-extra-semi": 2,            // disallow unnecessary semicolons
    "no-func-assign": 2,           // disallow overwriting functions written as function declarations
    "no-inner-declarations": 2,    // disallow function or variable declarations in nested blocks
    "no-invalid-regexp": 2,        // disallow invalid regular expression strings in the RegExp constructor
    "no-negated-in-lhs": 2,        // disallow negation of the left operand of an in expression
    "no-obj-calls": 2,             // disallow the use of object properties of the global object (Math and JSON) as functions
    "no-regex-spaces": 2,          // disallow multiple spaces in a regular expression literal
    "no-sparse-arrays": 2,         // disallow sparse arrays
    "no-unreachable": 2,           // disallow unreachable statements after a return, throw, continue, or break statement
    "use-isnan": 2,                // disallow comparisons with the value NaN
    "valid-jsdoc": 2,              // Ensure JSDoc comments are valid (off by default)
    "valid-typeof": 2,             // Ensure that the results of typeof are compared against a valid string
    "no-unexpected-multiline": 2   // Avoid code that looks like two expressions but is actually one (off by default)
  }
}